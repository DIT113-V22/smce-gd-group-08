[gd_scene load_steps=2 format=3 uid="uid://dkm0mo3bqvenv"]

[sub_resource type="GDScript" id="GDScript_nwmw7"]
script/source = "@tool
extends Control

func _ready():
	var file_mode = Ui.value(FilePicker.SELECT_FILE)
	var filters = Ui.value([[\"Arduino\", [\"*.ino\", \"*.pde\"]], [\"C++\", [\"*.cpp\", \"*.hpp\", \"*.hxx\", \"*.cxx\"]], [\"Any\", [\"*\"]]])

	var opacity = Ui.value(1.0)
	var modulate_tween = Ui.tween(opacity, 0.08)
	
	var root = Ui.make_ui_root(func(ctx: Ctx): ctx \\
		.inherits(FilePicker.filepicker(file_mode, filters)) \\
		.with(\"rect_scale:y\", Ui.tween(opacity, 0.1, Tween.TRANS_SINE)) \\
		.with(\"modulate:a\", modulate_tween) \\
		# SUS:
		.with(\"rect_pivot_offset\", Ui.map(opacity, func(__):
			return ctx.object().get_combined_minimum_size() / 2 if ctx.object() else Vector2() \\
		)) \\
		.on(\"completed\", func(path): print(\"COMPLETED!: \", path)) \\
		.on(\"cancelled\", func(): 
			print(\"CANCELLED!\")
			opacity.value =  (opacity.value - 1) * -1 \\
		)
	)
	
	root.set_anchors_preset(Control.PRESET_WIDE)
	add_child(root)
"

[node name="Control" type="MarginContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( "GDScript_nwmw7" )
